version: 0.1
# run-as: root
cache:
  paths:
    - '/root/.docker/**/*'

artifacts:
  files:
    - '**/*'

phases:
  install:
    commands:
      - echo "Install Phase - if you need additional package, add it in this stage"
  pre_build:
      commands:
        # This Docker Image tag will have date, time and Codecommit version
        - TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        # Updating Docker Image tag in your Kubernetes Deployment Manifest
        - echo "Update Image tag in kubernetes manifest"
        - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URL:$TAG"'@' manifests/deployment.yaml
        # Check AWS CLI Version
        - echo "Checking AWS CLI Version..."
        - aws --version
        # Login to ECR Registry
        - echo "Login in to Amazon ECR Registry"
        - aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 186296540553.dkr.ecr.us-west-2.amazonaws.com/nebula-demo-repo

  build:
    commands:
      # Building Docker Image
      - echo "Docker build started on `date`"
      - echo "Building the Docker image..."
      - docker build --tag $REPOSITORY_URL:$TAG .
  post_build:
    commands:
      # Push Docker Image to ECR Repository
      - echo "Docker build completed on `date`"
      - echo "Pushing the Docker image to ECR Repository"
      - docker push $REPOSITORY_URL:$TAG
      - echo "Docker Push to ECR Repository Completed -  $REPOSITORY_URL:$TAG"
      # Get AWS Credential using STS Assume Role for kubectl
      - echo Push the latest image to cluster
      - kubectl apply -f manifests/
